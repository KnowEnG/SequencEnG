[
  {
    "order": 1,
    "nextStep": 2,
    "nextStepCount": 1,
    "parent": "",
    "step": "Quality control of reads",
    "Software": "",
    "Description": "",
    "Features": "",
    "Strength": "",
    "RCR": "",
    "Limitation": "",
    "Format_input": "",
    "Format_output": "",
    "Platform requirement": "",
    "Link": "",
    "Paper": ""
  },
  {
    "order": 1.1,
    "nextStep": 1.2,
    "nextStepCount": 1,
    "parent": "",
    "step": "quality control",
    "software": "CAM",
    "description": "CAM calculates different measurements for nucleosome organization profiles in MNase-seq data.",
    "features": "CAM provides quality control for various steps such as sequencing coverage, dinucleotide frequency, nucleosomal DNA length, enrichment of nucleosome array in DNase I hypersensitive sites and so on.",
    "strength": "The quality control components are specific to MNase-seq data.",
    "limitation": "",
    "format_input": "FASTQ, SAM, BED",
    "format_output": "Text, BED, BIGWIG, PDF",
    "platform requirement": "Python, R, Linux/MacOS",
    "link": "https://zhanglab.tongji.edu.cn/softwares/CAM/index.html",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/28787030"
  },
  {
    "order": 1.1,
    "nextStep": 1.2,
    "nextStepCount": 1,
    "parent": "Quality control of reads",
    "step": "Viewing read quality",
    "Software": "FastQC",
    "Description": "A quality control tool for high throughput raw sequence data.",
    "Features": "It generates quality reports for NGS data and gives pass/fail results for the following checks: Per base sequence quality, Per sequence quality scores, Per base sequence content, Per base GC content, Per sequence GC content, Per base N content, Sequence length distribution, Sequence duplication levels, Overrepresented sequences, Kmer content. It also has a Graphic User Interface.",
    "Strength": "It is easy to use; provides visualization in HTML reports; can be used on Illumina, PacBio, 454 reads.",
    "RCR": "",
    "Limitation": "",
    "Format_input": "BAM, SAM, FASTQ",
    "Format_output": "HTML, Text",
    "Platform requirement": "JAVA",
    "Link": "https://www.bioinformatics.babraham.ac.uk/projects/fastqc/",
    "Paper": "NA"
  },
  {
    "order": 1.2,
    "nextStep": 2,
    "nextStepCount": 1,
    "parent": "Quality control of reads",
    "step": "Trimming reads",
    "Software": "FASTX-Toolkit",
    "Description": "The FASTX-Toolkit is a collection of command line tools for short-reads FASTA/FASTQ files preprocessing.",
    "Features": "The sub-command \"fastx_trimmer\" can be used to shorten reads (removing barcodes or noise) in FASTQ files . The sub-command \"fastqx_clipper\" can remove sequencing adapters or linkers.",
    "Strength": "Besides \"fastx_trimmer\" and \"fastx_clipper\" in this toolkit, there are multiple tools and commands for processing FASTA/FASTQ files. It can also be integrated and used on the web-based bioinformatics platform Galaxy.",
    "RCR": "",
    "Limitation": "Last updated in 2010. {\"value\": \"Be ware of the older base quality encoding. \", \"link\" : \"https://wikis.utexas.edu/display/bioiteam/FASTQ+Manipulation+Tools\" }",
    "Format_input": "FASTA/FASTQ",
    "Format_output": "FASTA/FASTQ",
    "Platform requirement": "",
    "Link": "https://github.com/agordon/fastx_toolkit",
    "Paper": "https://www.ncbi.nlm.nih.gov/pubmed/21278185"
  },
  {
    "order": 1.2,
    "nextStep": 2,
    "nextStepCount": 1,
    "parent": "Quality control of reads",
    "step": "Trimming reads",
    "Software": "Trimmomatic",
    "Description": "A flexible read trimming tool for Illumina NGS data.",
    "Features": "It can trim adapter sequences, remove low-quality reads and bases.",
    "Strength": "It is designed as more pair-aware for paired-end data. The authors found trimmomatic to run faster than cutadapt and FASTX-Toolkit.  ({\"value\":\"see Trimmomatic paper\",\"link\":\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4103590/\"})",
    "RCR": "",
    "Limitation": "For Illumina reads.",
    "Format_input": "FASTQ",
    "Format_output": "FASTQ",
    "Platform requirement": "JAVA",
    "Link": "http://www.usadellab.org/cms/?page=trimmomatic",
    "Paper": "https://www.ncbi.nlm.nih.gov/pubmed/24695404"
  },
  {
    "order": 1.2,
    "nextStep": 2,
    "nextStepCount": 1,
    "parent": "Quality control of reads",
    "step": "Trimming reads",
    "Software": "cutadapt",
    "Description": "Cutadapt finds and removes adapter sequences, primers, poly-A tails and other types of unwanted sequences from high-throughput sequencing reads.",
    "Features": "Cutadapt helps with various trimming tasks by finding the adapter or primer sequences in an error-tolerant way. It can also modify and filter reads in various ways. Adapter sequences can contain IUPAC wildcard characters. Also, paired-end reads and even colorspace data are supported. If you want, you can also just demultiplex your input data, without removing adapter sequences at all ({\"value\":\"see manual\",\"link\":\"https://media.readthedocs.org/pdf/cutadapt/stable/cutadapt.pdf\"}).",
    "Strength": "It supports 454, Illumina and SOLiD (colour space) data. It is used inside another tool called {\"value\":\"Trim Galore\",\"text\":\"https://www.bioinformatics.babraham.ac.uk/projects/trim_galore/\"}, also a quality control tool by the FastQC team.",
    "RCR": "",
    "Limitation": "",
    "Format_input": "FASTA/FASTQ",
    "Format_output": "FASTA/FASTQ",
    "Platform requirement": "Python",
    "Link": "https://cutadapt.readthedocs.io/en/stable/index.html",
    "Paper": "NA"
  },
  {
    "order":1.2,  
    "nextStep": 2, 
    "nextStepCount": 1,
    "parent": "Quality control of reads",
    "step": "Trimming reads",
    "software": "FLEXBAR",
    "description": "FLEXBAR is a flexible barcode and adapter processing for next-generation sequencing platforms.",
    "features": "Accurate recognition of reads, barcode and adapter removal, demultiplexing, sorting, quality trimming and basic filtering.",
    "strength": "Supports parallel computation and thus combines speed with precision.",
    "limitation": "",
    "format_input": "FASTQ",
    "format_output": "FASTQ",
    "platform requirement": "C++",
    "link": "https://sourceforge.net/projects/flexbar/",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/24832523"
  },
  {
    "order": 2,
    "nextStep": 3,
    "nextStepCount": 1,
    "parent": "",
    "step": "Read mapping",
    "Software": "",
    "Description": "",
    "Features": "",
    "Strength": "",
    "RCR": "",
    "Limitation": "",
    "Format_input": "",
    "Format_output": "",
    "Platform requirement": "",
    "Link": "",
    "Paper": ""
  },
  {
    "order": 2,
    "nextStep": 3,
    "nextStepCount": 1,
    "parent": "",
    "step": "Read mapping",
    "Software": "Bowtie",
    "Description": "An ultrafast memory-efficient short read aligner.",
    "Features": "It uses Burrows-Wheeler transform to create a permanent, reusable index of the genome.",
    "Strength": "It aligns short DNA sequences (reads) to the human genome at a rate of over 25 million 35-bp reads per hour. Bowtie indexes the genome with a Burrows-Wheeler index to keep its memory footprint small: typically about 2.2 GB for the human genome (2.9 GB for paired-end; {\"value\":\"see Bowtie page\", \"link\":\"http://bowtie-bio.sourceforge.net/index.shtml\"}). For relatively short reads (e.g. less than 50 bp) Bowtie 1 is sometimes faster and/or more sensitive than Bowtie 2. {\"value\":\"link\",\"link\":\"http://bowtie-bio.sourceforge.net/bowtie2/faq.shtml\"}",
    "RCR": "",
    "Limitation": "It does not support gapped alignments; there is an upper limit on read length (1024 bp).",
    "Format_input": "FASTQ, FASTA, Raw sequence per line",
    "Format_output": "Bowtie output (one alignment per line), SAM/BAM",
    "Platform requirement": "",
    "Link": "http://bowtie-bio.sourceforge.net/index.shtml",
    "Paper": "https://www.ncbi.nlm.nih.gov/pubmed/19261174"
  },
  {
    "order": 2,
    "nextStep": 3,
    "nextStepCount": 1,
    "parent": "",
    "step": "Read mapping",
    "Software": "Bowtie2",
    "Description": "Bowtie 2 is an ultrafast and memory-efficient tool for aligning sequencing reads to long reference sequences.",
    "Features": "Bowtie2 first extracts \"seed\" substrings in reads, aligns seeds in an ungapped way, and then performs extension in a gapped way.",
    "Strength": "Bowtie 2 supports gapped, local, and paired-end alignment modes. It indexes the genome with an FM Index to keep its memory footprint small: for the human genome, its memory footprint is typically around 3.2 GB. For reads longer than about 50 bp, Bowtie 2 is generally faster, more sensitive, and uses less memory than Bowtie 1. It is particularly good at aligning reads of about 50 up to 100s or 1,000s of characters, and good at aligning to relatively long (i.e. mammalian) genomes.  {\"value\":\"see Bowtie2 page\",\"link\":\"http://bowtie-bio.sourceforge.net/bowtie2/index.shtml\"}",
    "RCR": "",
    "Limitation": "For relatively short reads (e.g. less than 50 bp) Bowtie 1 is sometimes faster and more sensitive than Bowtie 2. {\"value\":\"see this\",\"link\":\"http://bowtie-bio.sourceforge.net/bowtie2/faq.shtml\"}",
    "Format_input": "FASTQ, QSEQ, FASTA, Raw sequence per line",
    "Format_output": "Bowtie output (one alignment per line), SAM/BAM",
    "Platform requirement": "",
    "Link": "http://bowtie-bio.sourceforge.net/bowtie2/index.shtml",
    "Paper": "https://www.ncbi.nlm.nih.gov/pubmed/22388286"
  },
  {
    "order": 2,
    "nextStep": 3,
    "nextStepCount": 1,
    "parent": "",
    "step": "Read mapping",
    "Software": "BWA",
    "Description": "BWA is a software package for mapping low-divergent sequences against a large reference genome.",
    "Features": "BWA uses a Burrows-Wheeler transform to create an index of the genome. It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM. The first algorithm is designed for Illumina sequence reads up to 100bp, while the rest two for longer sequences ranged from 70bp to 1Mbp. {\"value\":\"link\",\"link\":\"http://bio-bwa.sourceforge.net/bwa.shtml\"}",
    "Strength": "BWA allows indels in alignment. BWA is used by {\"value\":\"ENCODE DNase-seq pipeline\", \"link\":\"https://github.com/ENCODE-DCC/dnase_pipeline\"} and {\"value\":\"ENCODE ChIP-seq pipeline\",\"link\":\"https://github.com/ENCODE-DCC/chip-seq-pipeline\"}.",
    "RCR": "",
    "Limitation": "",
    "Format_input": "FASTQ, FASTA, BAM",
    "Format_output": "SAM/BAM",
    "Platform requirement": "",
    "Link": "http://bio-bwa.sourceforge.net/",
    "Paper": "https://www.ncbi.nlm.nih.gov/pubmed/19451168"
  },
  {
    "order": 3,
    "nextStep": 4,
    "nextStepCount": 1,
    "parent": "",
    "step": "Quality control after mapping",
    "Software": "",
    "Description": "",
    "Features": "",
    "Strength": "",
    "RCR": "",
    "Limitation": "",
    "Format_input": "",
    "Format_output": "",
    "Platform requirement": "",
    "Link": "",
    "Paper": ""
  },
  {
    "order": 3.1,
    "nextStep": 4,
    "nextStepCount": 1,
    "parent": "Quality control after mapping",
    "step": "Viewing mapping statistics",
    "Software": "SAMtools",
    "Description": "SAMtools: Utilities for the Sequence AlignmentMap (SAM) format.",
    "Features": "SAMtools has multiple commands for processing SAM/BAM files. The sub-command \"SAMtools-flagstat\" can be used to print statistics for SAM/BAM files using the {\"value\":\"FLAG field\",\"link\":\"https://samtools.github.io/hts-specs/SAMv1.pdf\"}.",
    "Strength": "",
    "RCR": "",
    "Limitation": "",
    "Format_input": "SAM/BAM",
    "Format_output": "SAM/BAM",
    "Platform requirement": "",
    "Link": "http://www.htslib.org/doc/samtools.html",
    "Paper": "https://www.ncbi.nlm.nih.gov/pubmed/19505943"
  },
  {
    "order": 3.1,
    "nextStep": 4,
    "nextStepCount": 1,
    "parent": "Quality control after mapping",
    "step": "Removing duplicates",
    "Software": "PICARD",
    "Description": "Picard is a set of command line tools for manipulating high-throughput sequencing (HTS) data and formats such as SAM/BAM/CRAM and VCF.",
    "Features": "It can summarize mapping statistics such as insert size, mapping score summary, and quality score summary. In particular, the subcommand Picard-MarkDuplicates can be used to remove duplicates.",
    "Strength": "",
    "RCR": "",
    "Limitation": "MarkDuplicates uses coordinate information but not read sequence information.",
    "Format_input": "SAM/BAM",
    "Format_output": "SAM/BAM",
    "Platform requirement": "JAVA",
    "Link": "https://broadinstitute.github.io/picard/",
    "Paper": "NA"
  },
  {
    "order": 4,
    "nextStep": "",
    "nextStepCount": 0,
    "parent": "",
    "step": "Inferring nucleosome occupancy and positioning",
    "software": "DANPOS 2",
    "description": "DANPOS is particularly developed for dynamic nucleosome analysis at single-nucleotide resolution.",
    "features": "DANPOS detects position shift, fuzziness change and occupancy change during nucleosome dynamics.",
    "strength": "DANPOS compares nucleosome maps across different conditions systematically.",
    "limitation": "",
    "format_input": "Bowtie format, SAM, BAM, BED",
    "format_output": "WIG, XLS",
    "platform requirement": "Python, R, Samtools",
    "link": "https://sites.google.com/site/danposdoc/",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/23193179"
  },
  {
    "order": 4,
    "nextStep": "",
    "nextStepCount": 0,
    "parent": "",
    "step": "Inferring nucleosome occupancy and positioning",
    "software": "NSeq",
    "description": "NSeq finds positioned nucleosomes from MNase-seq data.",
    "features": "NSeq controls for false positives, is multithreaded and fast.",
    "strength": "NSeq is multithreaded and comes with a graphical user interface.",
    "limitation": "",
    "format_input": "SAM, BAM, BED",
    "format_output": "WIG, PDF",
    "platform requirement": "Java",
    "link": "https://github.com/songlab/NSeq",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/23335939"
  },
  {
    "order": 4,
    "nextStep": "",
    "nextStepCount": 0,
    "nextStep": "",
    "nextStepCount": "",
    "parent": "",
    "step": "Inferring nucleosome occupancy and positioning",
    "software": "NOrMAL",
    "description": "NOrMAL uses a Gaussian mixture model to find accurate positions of nucleosomes.",
    "features": "The algorithm can identify and infer characteristics of nucleosomes and particularly can handle complex overlapping profiles.",
    "strength": "The algorithm addresses the challenges of fuzzy and overlapping nucleosomes.",
    "limitation": "",
    "format_input": "Text",
    "format_output": "",
    "platform requirement": "C",
    "link": "https://github.com/antonpolishko/NOrMAL",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/22689767"
  },
  {
    "order": 4,
    "nextStep": "",
    "nextStepCount": 0,
    "parent": "",
    "step": "Inferring nucleosome occupancy and positioning",
    "software": "Template Filter",
    "description": "Template Filter is a method for calling nucleosome positions and occupancy where the read distributions are matched with model templates.",
    "features": "The algorithm correlates 7x7 combinations of templates with the reads using a sliding window.",
    "strength": "The seven representative templates were found to be common to many previously published datasets.",
    "limitation": "",
    "format_input": "Text",
    "format_output": "Text",
    "platform requirement": "C++",
    "link": "http://compbio.cs.huji.ac.il/NucPosition/TemplateFiltering/Home.html",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/19846608"
  },
  {
    "order": 4,
    "nextStep": "",
    "nextStepCount": 0,
    "parent": "",
    "step": "Inferring nucleosome occupancy and positioning",
    "software": "PING 2.0",
    "description": "PING 2.0 uses a probabilistic framework for nucleosome predictions.",
    "features": "The algorithm uses a bivariate t-distribution (for paired-end reads) to model the reads and outputs nucleosome positions, fuzziness and enrichment scores.",
    "strength": "The model-based approach makes the package applicable to data with low read counts as well. The software has a convenient R package.",
    "limitation": "",
    "format_input": "BAM, BED, GRanges object",
    "format_output": "GRanges object",
    "platform requirement": "R",
    "link": "https://bioconductor.org/packages/release/bioc/html/PING.html",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/22393380"
  },
  {
    "order": 4,
    "nextStep": "",
    "nextStepCount": 0,
    "parent": "",
    "step": "Inferring nucleosome occupancy and positioning",
    "software": "nucleR",
    "description": "nucleR is a R package that uses a nonparametric framework to detect nucleosomes.",
    "features": "The package removes noise in the input data by converting to Fourier space using fast Fourier transform.",
    "strength": "The R package is very flexible exporting the results and visualizations.",
    "limitation": "",
    "format_input": "BAM",
    "format_output": "WIG, BED",
    "platform requirement": "R",
    "link": "http://bioconductor.org/packages/release/bioc/html/nucleR.html",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/21653521"
  },
  {
    "order": 4,
    "nextStep": "",
    "nextStepCount": 0,
    "parent": "",
    "step": "Inferring nucleosome occupancy and positioning",
    "software": "iNPS",
    "description": "iNPS is a more accurate nucleosome positioning software compared to the earlier package NPS.",
    "features": "The algorithm detects peaks by accurately finding nucleosome boundaries and shoulder peaks using Gaussian convolution. The algorithm also gives better width and phasing in nucleosome profiles.",
    "strength": "The iNPS algorithm can unambiguously detect 60% more nucleosomes than the previous package and also lower false positive than other packages.",
    "limitation": "",
    "format_input": "BED",
    "format_output": "WIG, BED",
    "platform requirement": "Python",
    "link": "http://www.picb.ac.cn/hanlab/iNPS.html",
    "paper": "https://www.ncbi.nlm.nih.gov/pubmed/25233085"
  }
]
