"use strict";(function(window,document,$){$(document).on('init.dt',function(e,dtSettings){if(e.namespace!=='dt')
return
var options=dtSettings.oInit.hideEmptyCols||dtSettings.oInit.hideEmptyColumns
if(!options)
return
var _cfgItem=function(item,def){if($.isPlainObject(options)&&typeof options[item]!=='undefined')
return options[item]
return def}
var api=new $.fn.dataTable.Api(dtSettings),emptyCount=0,colList=[],isWhiteList=!_cfgItem('whiteList',false),perPage=_cfgItem('perPage'),trimData=_cfgItem('trim',true),onStateLoad=_cfgItem('onStateLoad',true)
var _isEmpty=function(colData){if(trimData)
colData=$.trim(colData)
if(colData===null||colData.length===0)
return true
var retVal=false
var emptyVals=_cfgItem('emptyVals')
var _checkEmpty=function(val,emptyVal){var objType=Object.prototype.toString.call(emptyVal)
var match=objType.match(/^\[object\s(.*)\]$/)
if(match[1]==='RegExp')
return val.match(emptyVal)
return val===emptyVal}
if($.isArray(emptyVals)){$.each(emptyVals,function(i,ev){if(_checkEmpty(colData,ev))
retVal=true})}
else if(typeof emptyVals!=='undefined'){if(_checkEmpty(colData,emptyVals))
retVal=true}
return retVal}
if($.isArray(options)){if(options.length!==0){$.each(options,function(k,i){var indx=api.column(i).index()
colList.push(typeof indx!=='undefined'?indx:i)})}
else{return}}
else if($.isPlainObject(options)){if(typeof options.columns==='undefined'||options.columns===true){colList=api.columns().indexes().toArray()}
else if($.isArray(options.columns)){colList=options.columns}
else if(typeof options.columns!=='boolean'){console.error('[Hide Empty Columns]: Expected typeof `columns` setting value to be an array, boolean or undefined, but received value type "%s"',typeof options.columns)
return}
else{return}}
else if(options===true){colList=api.columns().indexes().toArray()}
else{return}
var _checkColumns=function(){var info=api.page.info(),colFilter=(perPage?{search:'applied'}:undefined)
api.columns(colFilter).every(function(){emptyCount=0
if($.inArray(this.index(),colList)===-1&&$.inArray(api.column(this.index()).dataSrc(),colList)===-1)
{if(isWhiteList===true)return}
else{if(isWhiteList===false)return}
var data=this.data().toArray(),isVis=false,intStart=(perPage===true?info.start:0),intStop=(perPage===true?info.end:data.length),dtState=api.state.loaded()
for(var i=intStart;i<intStop;i++){if(!_isEmpty(data[i])){isVis=true
break}}
api.column(this.index()).visible(isVis)})}
if(onStateLoad===true)
api.on('stateLoadParams.dt',_checkColumns)
if(perPage===true)
api.on('page.dt',_checkColumns).on('search.dt',_checkColumns).on('order.dt',_checkColumns).on('length.dt',_checkColumns)
_checkColumns()})})(window,document,jQuery)